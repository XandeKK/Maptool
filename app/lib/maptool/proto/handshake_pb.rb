# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: handshake.proto

require 'google/protobuf'

require_relative 'library_pb'
require_relative 'data_transfer_objects_pb'
require_relative 'gamedata_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "maptool.HandshakeMsg" do
    oneof :message_type do
      optional :client_init_msg, :message, 1, "maptool.ClientInitMsg"
      optional :client_auth_message, :message, 3, "maptool.ClientAuthMsg"
      optional :use_auth_type_msg, :message, 2, "maptool.UseAuthTypeMsg"
      optional :handshake_response_code_msg, :enum, 4, "maptool.HandshakeResponseCodeMsg"
      optional :connection_successful_msg, :message, 5, "maptool.ConnectionSuccessfulMsg"
      optional :player_blocked_msg, :message, 6, "maptool.PlayerBlockedMsg"
      optional :request_public_key_msg, :message, 7, "maptool.RequestPublicKeyMsg"
      optional :public_key_upload_msg, :message, 8, "maptool.PublicKeyUploadMsg"
      optional :public_key_added_msg, :message, 9, "maptool.PublicKeyAddedMsg"
    end
  end
  add_message "maptool.ClientInitMsg" do
    optional :player_name, :string, 1
    optional :version, :string, 2
    optional :public_key_md5, :string, 3
  end
  add_message "maptool.UseAuthTypeMsg" do
    optional :auth_type, :enum, 1, "maptool.AuthTypeEnum"
    optional :salt, :bytes, 2
    optional :iv, :bytes, 4
    repeated :challenge, :bytes, 3
  end
  add_message "maptool.ClientAuthMsg" do
    optional :challenge_response, :bytes, 1
    optional :iv, :bytes, 2
  end
  add_message "maptool.ConnectionSuccessfulMsg" do
    optional :role_dto, :enum, 1, "maptool.RoleDto"
    optional :server_policy_dto, :message, 2, "maptool.ServerPolicyDto"
    optional :add_on_library_list_dto, :message, 3, "maptool.AddOnLibraryListDto"
    optional :game_data_dto, :message, 4, "maptool.DataStoreDto"
  end
  add_message "maptool.PlayerBlockedMsg" do
    optional :reason, :string, 1
  end
  add_message "maptool.RequestPublicKeyMsg" do
    optional :pin, :string, 1
  end
  add_message "maptool.PublicKeyUploadMsg" do
    optional :public_key, :string, 1
  end
  add_message "maptool.PublicKeyAddedMsg" do
    optional :public_key, :string, 1
  end
  add_enum "maptool.HandshakeResponseCodeMsg" do
    value :UNKNOWN, 0
    value :OK, 1
    value :ERROR, 2
    value :PLAYER_ALREADY_CONNECTED, 3
    value :WRONG_VERSION, 4
    value :INVALID_PASSWORD, 5
    value :INVALID_PUBLIC_KEY, 6
    value :INVALID_HANDSHAKE, 7
    value :SERVER_DENIED, 8
  end
  add_enum "maptool.AuthTypeEnum" do
    value :SHARED_PASSWORD, 0
    value :ASYMMETRIC_KEY, 1
  end
end

module Maptool
  HandshakeMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.HandshakeMsg").msgclass
  ClientInitMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.ClientInitMsg").msgclass
  UseAuthTypeMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.UseAuthTypeMsg").msgclass
  ClientAuthMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.ClientAuthMsg").msgclass
  ConnectionSuccessfulMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.ConnectionSuccessfulMsg").msgclass
  PlayerBlockedMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.PlayerBlockedMsg").msgclass
  RequestPublicKeyMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.RequestPublicKeyMsg").msgclass
  PublicKeyUploadMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.PublicKeyUploadMsg").msgclass
  PublicKeyAddedMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.PublicKeyAddedMsg").msgclass
  HandshakeResponseCodeMsg = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.HandshakeResponseCodeMsg").enummodule
  AuthTypeEnum = Google::Protobuf::DescriptorPool.generated_pool.lookup("maptool.AuthTypeEnum").enummodule
end
